---

import { ClientRouter } from "astro:transitions";
import { getRelativeLocaleUrl } from "astro:i18n"
const currentLang = Astro.currentLocale || 'es'
interface Props {
	title: string;
}
const { title } = Astro.props;


---

<!doctype html>
<html lang={currentLang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ClientRouter/>
	</head>

	
	<body>
		<slot />
	</body>
</html>

<style is:global>
	@font-face{
		font-family: PP Neue Montreal Medium ;
		src: url('/fonts/PPNeueMontreal-Medium.woff2')format('woff2') ;
		font-style: normal;
		font-weight: 400;
		line-height: normal;

	}
	@font-face{
		font-family: OT Bulb Monoline;
		src: url('/fonts/OTBulbMonoline-500.woff2')format('woff2')
	}
	::-webkit-scrollbar{
		display: none;
	}

	
	:root {
		margin:0; 
		padding:0%;
		overflow-x: hidden;
		max-width: 100vw;
	}

	html {
		width: 100%;
		margin:0; 
		padding:0%;
		overflow-x: hidden;
		font-family: "PP Neue Montreal Medium"; 
		color: #000;
		font-size: 1rem;
		font-style: normal;
		
	
		background: rgba(224, 224, 224, 1);
		max-width: 100vw;
	}

	
	p{
		text-justify: inter-character;
	}

	button{
		all:unset; 
	}
	body{
		margin:0; 
		width: 100%;

	}
	.contenido img{ 
			max-width: 110%;
			height: auto;
		}
	.contenido p{
			font-size: 1rem;
			font-weight: 400;
			
	}
	.contenido p:first-of-type{
			margin-top: 0%;
			
	}
	.contenido h3{
			font-size: 1.8rem;
			font-weight: 400;
			
	}

		h2{
            font-size: 5rem;
			margin-bottom:0;
			font-weight: 400;
        }

		@media (max-width: 640px) {
			h2{
				font-size: 3rem;
			}
		}
		@media (max-width: 1030px) {
			.contenido p{
			width: 95%;
			}
			.contenido h2{
				max-width: 95%;
			}
			.contenido img{ 
			max-width: 100%;
			height: auto;
		}
		}
		

		
</style>

<script is:inline>

    document.addEventListener("astro:page-load", () => {
       
        const hiddenElements = document.querySelectorAll('.enfocar');
        const elements = document.querySelectorAll(".element");
        const textos = document.querySelectorAll(".textover");
        const preview = document.getElementById("lol");
        const big = document.getElementById("esoes");
        const infoBox = document.getElementById("info-box");






    if (window.matchMedia('(min-width: 1030px)').matches) {
  const observador = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const ratio = entry.intersectionRatio; // Cuánto está siendo visible
      if (ratio > 0.2) {
        entry.target.style.opacity = 1; // Visible completamente
      } else {
        entry.target.style.opacity = 0; // Oculto
      }
    });
  }, {
    root: null, // Usa el viewport como referencia
    threshold: Array.from({length: 11}, (_, i) => i * 0.1) // [0, 0.1, ..., 1] para pantallas grandes
  });

  hiddenElements.forEach((el) => observador.observe(el));
} else {
  const observador = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const ratio = entry.intersectionRatio; // Cuánto está siendo visible

      if (ratio > 0.1) {
        entry.target.style.opacity = 1; // Visible completamente
      } else {
        entry.target.style.opacity = 0; // Oculto
      }
    });
  }, {
    root: null, // Usa el viewport como referencia
    threshold: [0.1] // Solo 0.1 para pantallas pequeñas
  });

  hiddenElements.forEach((el) => observador.observe(el));
}
        
});



</script>